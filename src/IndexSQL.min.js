class IndexSQL{constructor(dbName){let db={},requestDB=indexedDB.open("IndexSQL",1);return requestDB.onerror=function(e){log.warn("Database error: "+e.target.errorCode)},requestDB.onupgradeneeded=function(e){(db=e.target.result).createObjectStore("databases",{keypath:"name"})},db.server=function(){let data={};var DBUtils={name:"",loaded:!1,transaction:!1,save:function(){let e=indexedDB.open("IndexSQL",1);e.onerror=function(e){log.warn("Database error: "+e.target.errorCode)},e.onsuccess=function(e){let t=e.target.result.transaction(["databases"],"readwrite");t.onerror=function(e){console.warn("Database error: "+e.target.errorCode)},t.oncomplete=function(e){};t.objectStore("databases").put({data:JSON.stringify(data)},DBUtils.name)}},load:function(){let e=indexedDB.open("IndexSQL",1);e.onerror=function(e){log.warn("Database error: "+e.target.errorCode)},e.onsuccess=function(e){let t=e.target.result.transaction(["databases"],"readonly");t.onerror=function(e){console.warn("Database error: "+e.target.errorCode)},t.oncomplete=function(e){r.result?data=JSON.parse(r.result.data):DBUtils.save(),DBUtils.loaded=!0};var r=t.objectStore("databases").get(DBUtils.name)}},drop:function(){let e=indexedDB.open("IndexSQL",1);e.onerror=function(e){log.warn("Database error: "+e.target.errorCode)},e.onsuccess=function(e){let t=e.target.result.transaction(["databases"],"readwrite");t.onerror=function(e){console.warn("Database error: "+e.target.errorCode)},t.oncomplete=function(e){console.log("Database "+DBUtils.name+" has been dropped"),postMessage({end:!0})};t.objectStore("databases").delete(DBUtils.name)}}},SQLParser={parse:function(e,t){DBUtils.loaded?postMessage({id:t,response:SQLParser.parseAll(e)}):setTimeout(function(e,t){return function(){SQLParser.parse(e,t)}}(e,t),500)},parseAll:function(e){e=e.split(";");let t=[];for(let r=0;r<e.length-1;r++){const s=e[r];if(t[r]=this.parser(s),t[r].result&&(t[r].order?(t[r].result=tables.transform(t[r].result,t[r].distinct,t[r].order),delete t[r].order,delete t[r].distinct):(t[r].result=tables.transform(t[r].result,t[r].distinct),delete t[r].distinct)),DBUtils.transaction&&t[r].error){DBUtils.load(),t[r].error=t[r].error+". Transaction cancelled";break}}return t},parser:function(e){switch((e=e.replace(/(\r\n|\n|\r)/gm," ").trim()).split(" ")[0].toUpperCase()){case"SELECT":return this.select(e);case"INSERT":return this.insert(e);case"CREATE":return this.create(e);case"UPDATE":return this.update(e);case"DELETE":return this.delete(e);case"DROP":return this.drop(e);case"TRUNCATE":return this.trucate(e);case"START":return this.start(e);case"END":return this.end(e);case"TABLES":return this.tables(e);default:return{error:"Not supported operation"}}},select:function(query){function getFrom(e){let t=["where","order"],r={from:"",where:"",order:""},s=e.split(" "),a="from";for(let e=0;e<s.length;e++){const n=s[e];t.includes(n.toLowerCase())?a=n.toLowerCase():r[a]=r[a]+" "+n}return r.from=r.from.trim(),r.where=""!==r.where?r.where.trim():void 0,r.order=""!==r.order?r.order.trim():void 0,r.order=r.order?r.order.substring(3):void 0,r}function getColumns(e,t){let r;if("*"===e.columns.trim())r=[],Object.keys(t).forEach(function(e){r.push(e.split(";")[0])});else{r=e.columns.split(",");for(let e=0;e<r.length;e++)r[e]=r[e].trim();for(let s=0;s<r.length;s++){const a=r[s];if(a.split(".")[1]){let e=tables.find(data,a.split(".")[0]);if(!e)return{error:"The table "+a.split(".")[0]+" doesn't exist"};if(!tables.find(e,a.split(".")[1]))return{error:"The column "+a.split(".")[1]+" does not belong to the table "+a.split(".")[0]}}else if(!tables.find(t,a))return{error:"The column "+a+" does not belong to the table "+e.from}}}return r}function getOrder(e,t){let r=[],s=e.order.split(",");for(let e=0;e<s.length;e++){const a=s[e].trim();let n=!1;if(!tables.find(t,a.split(" ")[0]))return{error:"The column "+a.split(" ")[0]+" does not belong to the table"};a.split(" ")[1]&&"DESC"===a.split(" ")[1].toUpperCase()&&(n=!0),r.push({name:a.split(" ")[0],desc:n})}return r}let selectRegex=/^SELECT\s*(?<distinct>DISTINCT)?\s*(?<columns>.*)\s*FROM(?<from>.*)$/gim,matches=selectRegex.exec(query);if(!matches)return{error:"Not supported operation"};matches=matches.groups;let matchesFrom=getFrom(matches.from.trim());matches.from=matchesFrom.from,matches.where=matchesFrom.where,matches.order=matchesFrom.order;let table=tables.find(data,matches.from);if(!table)return{error:"This table doesn't exists"};let columns=getColumns(matches,table),where;if(columns.error)return columns;if(matches.where&&(where=tables.where(matches.where,table),where.error))return where;let distinct=!1;matches.distinct&&(distinct=!0);let result={},myTable=JSON.parse(JSON.stringify(table));if(where)for(const key in myTable[Object.keys(myTable)[0]])if(myTable[Object.keys(myTable)[0]].hasOwnProperty(key))try{if(!eval(where))for(const e in myTable)myTable.hasOwnProperty(e)&&delete myTable[e][key]}catch(e){return{error:"Incorrect where statement"}}for(const e in myTable)if(myTable.hasOwnProperty(e)){const t=myTable[e];columns.includes(e.split(";")[0])&&(result[e]=t)}if(matches.order){let e=getOrder(matches,table);return e.error?e:{result:result,distinct:distinct,order:e}}return{result:result,distinct:distinct}},insert:function(e){let t=/^INSERT\s*INTO\s*(?<tableName>\w*)\s*(?:\((?<columns>.*)\))?\s*VALUES\s*\((?<values>.*)\)\s*$/gim.exec(e);if(null===t)return{error:"Not supported operation"};t=t.groups;let r=tables.find(data,t.tableName);if(!r)return{error:"This table doesn't exists"};let s=[];if(t.columns){t.columns.split(",").forEach(e=>{s.push(e.trim())})}else for(const e in r)r.hasOwnProperty(e)&&(s[e.split(";")[1]]=e.split(";")[0]);let a=t.values.split(",");for(let e=0;e<a.length;e++)a[e]=a[e].trim();let n=tables.insert(t.tableName,r,a,s);return n.error?n:(DBUtils.transaction||DBUtils.save(),n)},update:function(query){function getSet(e){let t=["where"],r={set:"",where:""},s=e.split(" "),a="set";for(let e=0;e<s.length;e++){const n=s[e];t.includes(n.toLowerCase())?a=n.toLowerCase():r[a]=r[a]+" "+n}return r.set=r.set.trim(),r.where=""!==r.where?r.where.trim():void 0,r}function getValues(e,t){let r=e.set.split(","),s={};for(let e=0;e<r.length;e++){const a=r[e];let n=tables.finder(t,a.split("=")[0].trim());if(!n)return{error:"The column "+a.split("=")[0].trim()+" does not belong to the table"};let o=a.split("=")[1].trim();s[n]=o}return s}let updateRegex=/^UPDATE\s*(?<tableName>.*)\s*SET(?<set>.*)$/gim,matches=updateRegex.exec(query);if(!matches)return{error:"Not supported operation"};matches=matches.groups;let matchesSet=getSet(matches.set.trim());matches.set=matchesSet.set,matches.where=matchesSet.where,matches.tableName=matches.tableName.trim();let table=tables.find(data,matches.tableName.trim());if(!table)return{error:"This table doesn't exists"};let values=getValues(matches,table),columnsAffected=Object.keys(values),where;if(values.error)return values;if(matches.where&&(where=tables.where(matches.where,table),where.error))return where;let indexExecuted=0,error,myTable=table;for(const key in table[Object.keys(table)[0]])if(table[Object.keys(table)[0]].hasOwnProperty(key))if(where)try{if(eval(where)){indexExecuted++;let e=[],t=[];for(const r in table)if(table.hasOwnProperty(r)){const s=table[r][key];e.push(r.split(";")[0]),columnsAffected.includes(r)?t.push(values[r]):"string"==typeof s?t.push("'"+s+"'"):t.push(s)}let r=this.insert("INSERT INTO "+matches.tableName+" ("+e.join()+") VALUES ("+t.join()+")");if(r.error){error=r;break}}}catch(error){return{error:"Incorrect where statement"}}else{indexExecuted++;let e=[],t=[];for(const r in table)if(table.hasOwnProperty(r)){const s=table[r][key];e.push(r.split(";")[0]),columnsAffected.includes(r)?t.push(values[r]):"string"==typeof s?t.push("'"+s+"'"):t.push(s)}let r=this.insert("INSERT INTO "+matches.tableName+" ("+e.join()+") VALUES ("+t.join()+")");if(r.error){error=r;break}}return error||{message:"Updated "+indexExecuted+" rows"}},delete:function(query){function getFrom(e){let t=["where"],r={from:"",where:"",order:""},s=e.split(" "),a="from";for(let e=0;e<s.length;e++){const n=s[e];t.includes(n.toLowerCase())?a=n.toLowerCase():r[a]=r[a]+" "+n}return r.from=r.from.trim(),r.where=""!==r.where?r.where.trim():void 0,r}let deleteRegex=/^DELETE\s*FROM\s*(?<from>.*)$/gim,matches=deleteRegex.exec(query);if(!matches)return{error:"Not supported operation"};matches=matches.groups;let matchesFrom=getFrom(matches.from.trim());matches.from=matchesFrom.from,matches.where=matchesFrom.where;let table=tables.find(data,matches.from),where;if(!table)return{error:"This table doesn't exists"};if(matches.where&&(where=tables.where(matches.where,table),where.error))return where;let myTable=table,indexExecuted=0;for(const key in table[Object.keys(table)[0]])if(table[Object.keys(table)[0]].hasOwnProperty(key))if(where)try{if(eval(where)){indexExecuted++;for(const e in table)table.hasOwnProperty(e)&&delete table[e][key]}}catch(e){return{error:"Incorrect where statement"}}else{indexExecuted++;for(const e in table)table.hasOwnProperty(e)&&delete table[e][key]}return DBUtils.transaction||DBUtils.save(),{message:"Deleted "+indexExecuted+" rows"}},create:function(e){let t,r=/^CREATE\s*TABLE\s*(?<tableName>\w*)\s*(?:(?<parameters>\(.*\))|(?:AS (?<selectCopy>.*)))$/gim.exec(e);if(null===r)return{error:"Not supported operation"};if(r=r.groups,tables.find(data,r.tableName))return{warn:"This table already exists"};if(r.parameters){let e=function(e){let t={keys:{primary:"",foreign:[]},parameters:[]},r=["NOT_NULL","UNIQUE","DEFAULT","AUTO_INCREMENT","CHECK"],s=["STRING","NUMBER","BOOLEAN"],a=(e=e.slice(1,-1)).split(",");for(let e=0;e<a.length;e++){const n=a[e].trim();if(n.toUpperCase().includes("KEY"))if(n.toUpperCase().includes("PRIMARY")){let e=/^PRIMARY\s*KEY\s*\((?<varName>.*)\)$/gim.exec(n).groups.varName.trim();if(!t.parameters.find(function(t){return t.name===e}))return{error:"PRIMARY KEY does not exist"};t.keys.primary=e}else{let e=/^^FOREIGN\s*KEY\s*\((?<varName>.*)\)\s*REFERENCES\s*(?<referTable>.*)\((?<referName>.*)\)$/gim.exec(n).groups;if(e.varName=e.varName.trim(),e.referTable=e.referTable.trim(),e.referName=e.referName.trim(),!t.parameters.find(function(t){return t.name===e.varName}))return{error:"FOREIGN KEY does not exist"};if(!tables.find(tables.find(data,e.referTable),e.referName))return{error:"FOREIGN KEY does not exist in foreign table"};t.keys.foreign.push(e.varName+":"+e.referTable+"("+e.referName+")")}else{let e=n.split(" "),a={name:e[0]},o=(o=e[1].toUpperCase()).includes("CHAR")?"STRING":o.includes("BINARY")?"STRING":o.includes("TEXT")?"STRING":o.includes("BLOB")?"STRING":o.includes("BIT")?"NUMBER":o.includes("INT")?"NUMBER":o.includes("FLOAT")?"NUMBER":o.includes("DOUBLE")?"NUMBER":o.includes("DEC")?"NUMBER":o.includes("BOOL")?"BOOLEAN":o;if(!s.includes(o))return{error:"Parameter "+e[0]+" has a non valid datatype"};a.datatype=o;for(let t=2;t<e.length;t++){a.constraints="";const s=e[t];if(r.includes(s.toUpperCase()))switch(s.toUpperCase()){case"NOT_NULL":a.constraints=a.constraints+"NOT NULL,";break;case"UNIQUE":a.constraints=a.constraints+"UNIQUE,";break;case"AUTO_INCREMENT":if("NUMBER"!==a.datatype)return{error:"The parameter "+a.name+" is set to AUTO_INCREMENT but is not type NUMBER"};a.constraints=a.constraints+"AUTO_INCREMENT,";break;case"DEFAULT":let n=[];for(let s=t;s<e.length;s++){const t=e[s];if(r.includes(t.toUpperCase()))break;n.push(t)}a.constraints=a.constraints+"DEFAULT "+n.join(" ")+",";break;case"CHECK":let o=[];for(let s=t;s<e.length;s++){const t=e[s];if(r.includes(t.toUpperCase()))break;o.push(t)}a.constraints=a.constraints+"CHECK "+o.join(" ")+","}}t.parameters.push(a)}}var n;return t}(r.parameters);if(e.error)return e;if((t=new Table(e.parameters)).error)return t;data[r.tableName+";"+e.keys.primary+";"+e.keys.foreign.join(",")]=t}return DBUtils.transaction||DBUtils.save(),{message:"Table created"}},drop:function(e){let t=/^DROP\s*TABLE\s*(?<tableName>\w*)\s*$/gim.exec(e);return null===t?{error:"Not supported operation"}:(t=t.groups,tables.find(data,t.tableName)?(delete data[tables.finder(data,t.tableName)],DBUtils.transaction||DBUtils.save(),{message:"Table dropped"}):{warn:"This table doesn't exists"})},trucate:function(e){let t=/^TRUNCATE\s*TABLE\s*(?<tableName>\w*)\s*$/gim.exec(e);if(null===t)return{error:"Not supported operation"};if(t=t.groups,!tables.find(data,t.tableName))return{warn:"This table doesn't exists"};let r=tables.find(data,t.tableName);for(let e=0;e<r.length;e++){const t=r[e];t=[]}return DBUtils.transaction||DBUtils.save(),{message:"Table truncated"}},start:function(e){return/^START\s*TRANSACTION\s*$/gim.compile(e)?(DBUtils.transaction=!0,{message:"Transaction starts"}):{error:"Not supported operation"}},end:function(e){return/^END\s*TRANSACTION\s*$/gim.compile(e)?(DBUtils.transaction=!1,DBUtils.save(),{message:"Transaction ends"}):{error:"Not supported operation"}},tables:function(e){if(/^TABLES\s*$/gim.compile(e)){let e=[];for(const t in data)data.hasOwnProperty(t)&&e.push(t.split(";")[0]);return{result:{"tables;0;":e}}}return{error:"Not supported operation"}}};function Table(e){let t={};for(let r=0;r<e.length;r++){const s=e[r];if(tables.find(t,s.name))return{error:"Variable already exists"};s.constraints?t[s.name+";"+r+";"+s.datatype+";"+s.constraints]={}:t[s.name+";"+r+";"+s.datatype]={}}return t}var tables={find:function(e,t){for(const r in e)if(e.hasOwnProperty(r)){const s=e[r];if(r.split(";")[0]===t)return s}},finder:function(e,t){for(const r in e)if(e.hasOwnProperty(r)){e[r];if(r.split(";")[0]===t)return r}},findColumn:function(e,t){for(const r in e)if(e.hasOwnProperty(r)){const s=e[r];if(r.split(";")[0]===t)return s}},insert:function(e,t,r,s){let a,n=tables.finder(data,e),o={};for(const e in t)if(t.hasOwnProperty(e)){const a=t[e];let n=e.split(";")[0],i=s.indexOf(n),l=e.split(";")[2],c=e.split(";")[3]?e.split(";")[3]:"",u=null;if(-1!==i)u=this.checkDatatype(l,r[i]);else{if(c.includes("DEFAULT")){let e=/DEFAULT\s*(?<defaultValue>.*),/gim;vaule=this.checkDatatype(l,e.exec(c).groups.defaultValue)}c.includes("AUTO_INCREMENT")&&(u=Object.keys(a).length)}if(u&&null!==u&&u.error)return u;if(c.includes("NOT_NULL")&&null===u)return{error:"Value of column "+n+" cannot be null"};if(c.includes("UNIQUE"))for(const e in a)if(a.hasOwnProperty(e)){if(u===object[e])return{error:"Value of column "+n+" has to be unique"}}c.includes("CHECK"),o[e]=u}if(n.split(";")[2]){let e=n.split(";")[2].split(",");for(let r=0;r<e.length;r++){const s=e[r];let a=o[tables.finder(t,s.split(":")[0])],n=tables.find(data,s.split(":")[1].split("(")[0]),i=tables.find(n,s.split(":")[1].split("(")[1].slice(0,-1)),l=!1;for(const e in i)if(i.hasOwnProperty(e)&&a===i[e]){l=!0;break}if(!l)return{error:"The foreign key "+s.split(":")[0]+" is not present in the foreign table"}}}if(n.split(";")[1]){if(null===(a=o[tables.finder(t,n.split(";")[1])]))return{error:"The primary key cannot be null"}}else a=Object.keys(t[Object.keys(t)[0]]).length;for(const e in t)if(t.hasOwnProperty(e)){t[e][a]=o[e]}return{message:"Values inserted succesfully"}},checkDatatype:function(e,t){if(t.toUpperCase().includes("NULL"))return null;switch(e){case"STRING":let r=/^(?:"(?<string1>.*)"|'(?<string2>.*)')$/gim.exec(t);return r?(r=r.groups).string1||""===r.string1?""===r.string1?"":r.string1:r.string2||""===r.string2?""===r.string2?"":r.string2:{error:"Value "+t+" is supposed to be a string"}:{error:"Value "+t+" is supposed to be a string"};case"NUMBER":let s=Number(t);return isNaN(s)?{error:"Value "+t+" is supposed to be a number"}:s;case"BOOLEAN":return!!t.toUpperCase().includes("TRUE")||!t.toUpperCase().includes("FALSE")&&{error:"Value "+t+" is supposed to be a boolean"};default:return{error:"Not supported datatype"}}},transform:function(e,t,r){let s={header:[],values:[]},a=Object.keys(e);for(const t in e)e.hasOwnProperty(t)&&s.header.push({name:t.split(";")[0],datatype:t.split(";")[2],constraints:t.split(";")[3]});for(const r in e[a[0]])if(e[a[0]].hasOwnProperty(r)){let n=[];for(let t=0;t<a.length;t++){const s=a[t];n.push(e[s][r])}if(t){if(s.values.find(function(e){return JSON.stringify(e)===JSON.stringify(n)}))continue}s.values.push(n)}return r&&s.values.sort(function(e,t){for(let a=0;a<r.length;a++){const n=r[a];let o,i,l;for(let e=0;e<s.header.length;e++){const t=s.header[e];if(t.name===n.name){o=t,i=e;break}}switch(o.datatype){case"NUMBER":if(e[i]===t[i]){l=0;break}l=e[i]>t[i]?1:-1;break;case"STRING":l=e[i].localeCompare(t[i]);break;case"BOOLEAN":if(e[i]===t[i]){s=0;break}l=e[i]?1:-1}if(0!==l)return n.desc&&(l=-l),l}return 1}),s},where:function(e,t){function r(e,t){return""===e?"":"AND"===e.toUpperCase()?"&&":"OR"===e.toUpperCase()?"||":"NOT"===e.toUpperCase()?"!":"IS"===e.toUpperCase()?"==":"NULL"===e.toUpperCase()?null:"TRUE"===e.toUpperCase()?"true":"FALSE"===e.toUpperCase()?"false":t.includes(e)?"myTable[tables.finder(myTable,'"+e+"')][key]":isNaN(Number(e))?"":Number(e)}let s=Object.keys(t);for(let e=0;e<s.length;e++)s[e]=s[e].split(";")[0];let a,n,o="",i=e.split(""),l="";for(let e=0;e<i.length;e++){const t=i[e];if(n)n.separator===t?(o=o+n.separator+n.word+n.separator,n=void 0):n.word=n.word+t;else{if("("===t||")"===t){o+=r(l,s),l="",o+=t;continue}if(a){if("="===t){o=o+a+t,a=void 0;continue}if(">"===t&&"<"===a){o+="!=",a=void 0;continue}o+=a,a=void 0}if("<"===t||">"===t){o+=r(l,s),l="",a=t;continue}if("="===t){o+=r(l,s),l="",o+="===";continue}if('"'===t||"'"===t){o+=r(l,s),l="",n={separator:t,word:""};continue}if(" "===t){o+=r(l,s),l="";continue}l+=t}}return o+=r(l,s),l="",o}};function createDB(e){DBUtils.name=e,DBUtils.load()}function messageHandler(e){if(e.data.drop)DBUtils.drop();else{if(!e.data.backup)return e.data.restore?(data=JSON.parse(e.data.restore),void DBUtils.save()):void SQLParser.parse(e.data.querys,e.data.id);postMessage({backup:JSON.stringify(data)})}}onmessage=messageHandler},db.id=0,db.callbacks=[],window.indexedDB?"undefined"==typeof Worker?(console.warn("Browser does not support Web Workers"),this):(db.worker=new Worker(URL.createObjectURL(new Blob(["("+db.server.toString().slice(0,-1)+"createDB('"+dbName+"');})()"],{type:"text/javascript"}))),db.worker.onmessage=function(e){if(e.data.end)return db.worker.terminate(),void(db.end=!0);e.data.backup?db.backupCallback(JSON.parse(e.data.backup)):(db.callbacks[e.data.id](e.data.response),db.callbacks[e.data.id]=void 0)},db.query=function(e,t){db.end?console.warn("This database has been dropped already"):(db.worker.postMessage({querys:e,id:db.id}),db.callbacks[db.id]=t,db.id++)},db.drop=function(){db.end?console.warn("This database has been dropped already"):db.worker.postMessage({drop:!0})},db.backup=function(e){db.end?console.warn("This database has been dropped already"):(db.backupCallback=e,db.worker.postMessage({backup:!0}))},db.restore=function(e){db.end?console.warn("This database has been dropped already"):db.worker.postMessage({restore:JSON.stringify(e)})},this.execute=db.query,this.drop=db.drop,this.backup=db.backup,this.restore=db.restore,this):(console.warn("Browser does not support indexDB"),this)}}